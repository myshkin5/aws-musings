AWSTemplateFormatVersion: 2010-09-09

Description: A jump box for a specific availability zone.

Parameters:
  AWSMusingsS3URL:
    Type: String
    Description: S3 path to aws-musings.
  DNSZone:
    Type: String
    Description: The DNS zone name of the VPC (should not end in 'vpc', used in naming the instance).
    AllowedPattern: "[a-z0-9\\-]*"
    ConstraintDescription: must contain only lowercase letters, numbers and dashes
  EIPAddress:
    Type: String
    Description: An EIP reserved for the jump box. Optional, a public IP address is reserved if not specified.
    AllowedPattern: "((\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3}))|(^$)"
    ConstraintDescription: must contain four dot-separated octets, optional
  FullyQualifiedExternalParentDNSZone:
    Type: String
    Description: |
      The external parent DNS zone (should not start or end with .). Optional, Route 53 resources will be created
      if specified.
    AllowedPattern: "([a-z][a-z0-9\\-.]*[a-z0-9])|(^$)"
    ConstraintDescription: must contain only lowercase letters, numbers, dashes and dots, optional
  ExternalHostedZoneId:
    Type: String
    Description: The external DNS zone to which an external DNS A record will be added for the jump box.
  FullyQualifiedInternalParentDNSZone:
    Type: String
    Description: The internal parent DNS zone (should not start or end with .).
    AllowedPattern: "[a-z][a-z0-9\\-.]*[a-z0-9]"
    ConstraintDescription: must contain only lowercase letters, numbers, dashes and dots
  InternalHostedZoneId:
    Type: AWS::Route53::HostedZone::Id
    Description: The internal DNS zone to which an internal DNS A record will be added for the jump box.
  ImageId:
    Type: AWS::EC2::Image::Id
    Description: The AMI used to create the instance.
  KeyName:
    Type: AWS::EC2::KeyPair::KeyName
    Description: SSH key name used to connect to the jump box.
  SecurityGroupId:
    Type: AWS::EC2::SecurityGroup::Id
    Description: The id of the security group protecting the jump box.
  SubnetId:
    Type: AWS::EC2::Subnet::Id
    Description: The id of the subnet where the server will be added.
  InstanceType:
    Type: String
    Description: The instance type of the jump box.

Conditions:
  EIPAddressDefined: !Not [ !Equals [ !Ref EIPAddress, "" ] ]
  FullyQualifiedExternalParentDNSZoneDefined: !And
    - !Not [ !Equals [ !Ref FullyQualifiedExternalParentDNSZone, "" ] ]
    - !Not [ !Equals [ !Ref ExternalHostedZoneId, "" ] ]

Resources:
  JumpBoxInstance:
    Type: AWS::EC2::Instance
    Metadata:
      "AWS::CloudFormation::Init":
        config:
          files:
            /etc/cfn/cfn-hup.conf:
              source: !Sub "${AWSMusingsS3URL}/common/cfn-hup.conf"
              context:
                STACK_ID: !Ref "AWS::StackId"
                REGION: !Ref "AWS::Region"
              mode: 000400
              owner: root
              group: root
            /etc/cfn/hooks.d/cfn-auto-reloader.conf:
              source: !Sub "${AWSMusingsS3URL}/common/cfn-auto-reloader.conf"
              context:
                STACK_ID: !Ref "AWS::StackId"
                REGION: !Ref "AWS::Region"
                INSTANCE_NAME: JumpBoxInstance
    Properties:
      DisableApiTermination: false
      ImageId: !Ref ImageId
      InstanceType: !Ref InstanceType
      KeyName: !Ref KeyName
      Monitoring: false
      Tags:
      - Key: Name
        Value: !Sub "${DNSZone}-jump-box"
      NetworkInterfaces:
      - AssociatePublicIpAddress: true
        DeleteOnTermination: true
        Description: Primary network interface
        DeviceIndex: 0
        SubnetId: !Ref SubnetId
        GroupSet: [ !Ref SecurityGroupId ]
      UserData:
        Fn::Base64:
          !Sub |
            #!/bin/bash

            set -e -x

            export HOSTNAME=jump-box
            export STACK_NAME="${AWS::StackName}"
            export RESOURCE=JumpBoxInstance
            export REGION="${AWS::Region}"
            export AWS_MUSINGS_S3_URL="${AWSMusingsS3URL}"

            curl --output /tmp/bootstrap.sh --silent $AWS_MUSINGS_S3_URL/common/bootstrap.sh
            source /tmp/bootstrap.sh
            aws-bootstrap

            # All done so signal success
            aws-signal-success
            reboot
    CreationPolicy:
      ResourceSignal:
        Timeout: PT10M

  JumpBoxEIPAssociation:
    Type: AWS::EC2::EIPAssociation
    Condition: EIPAddressDefined
    Properties:
      EIP: !Ref EIPAddress
      InstanceId: !Ref JumpBoxInstance
    DependsOn: JumpBoxInstance

  PublicJumpBoxRecordSet:
    Type: AWS::Route53::RecordSet
    Condition: FullyQualifiedExternalParentDNSZoneDefined
    Properties:
      HostedZoneId: !Ref ExternalHostedZoneId
      Name: !Sub "jump-box.${DNSZone}.${FullyQualifiedExternalParentDNSZone}"
      ResourceRecords:
      - !GetAtt JumpBoxInstance.PublicIp
      TTL: 300
      Type: A
    DependsOn: JumpBoxInstance

  PrivateJumpBoxRecordSet:
    Type: AWS::Route53::RecordSet
    Properties:
      HostedZoneId: !Ref InternalHostedZoneId
      Name: !Sub "jump-box.${DNSZone}.${FullyQualifiedInternalParentDNSZone}"
      ResourceRecords:
      - !GetAtt JumpBoxInstance.PrivateIp
      TTL: 300
      Type: A
    DependsOn: JumpBoxInstance

Outputs:
  JumpBoxPublicIPAddress:
    Description: The public IP address of the newly created jump box.
    Value: !GetAtt JumpBoxInstance.PublicIp
