---
  AWSTemplateFormatVersion: 2010-09-09

  Description: The VPC's identity server.

  Parameters:
    AWSMusingsS3URL:
      Type: String
      Description: S3 path to aws-musings.
    DNSZone:
      Type: String
      Description: The DNS zone name of the VPC (should not end in 'vpc', .FullyQualifiedInternalParentDNSZone will be
        appended).
      AllowedPattern: "[a-z0-9\\-]*"
      ConstraintDescription: must contain only lowercase letters, numbers and dashes
    FullyQualifiedInternalParentDNSZone:
      Type: String
      Description: The internal parent DNS zone (should not start or end with .).
      AllowedPattern: "[a-z][a-z0-9\\-.]*[a-z0-9]"
      ConstraintDescription: must contain only lowercase letters, numbers, dashes and dots
    KeyName:
      Type: AWS::EC2::KeyPair::KeyName
      Description: SSH key name used to connect to the identity server.
    SecurityGroupId:
      Type: AWS::EC2::SecurityGroup::Id
      Description: The id of the security group protecting the identity server.
    SubnetId:
      Type: AWS::EC2::Subnet::Id
      Description: The id of the subnet where the server will be added.

  Resources:
    IdentityInstance:
      Type: AWS::EC2::Instance
      Metadata:
        "AWS::CloudFormation::Init":
          config:
            packages:
              yum:
                openldap-servers: []
                openldap-clients: []
            services:
              sysvinit:
                slapd:
                  enabled: true
            files:
              /etc/cfn/cfn-hup.conf:
                source: !Sub "${AWSMusingsS3URL}/common/cfn-hup.conf"
                context:
                  STACK_ID: !Ref "AWS::StackId"
                  REGION: !Ref "AWS::Region"
                mode: 000400
                owner: root
                group: root
              /etc/cfn/hooks.d/cfn-auto-reloader.conf:
                source: !Sub "${AWSMusingsS3URL}/common/cfn-auto-reloader.conf"
                context:
                  STACK_ID: !Ref "AWS::StackId"
                  REGION: !Ref "AWS::Region"
                  INSTANCE_NAME: IdentityInstance
              /etc/dhcp/dhclient.conf:
                source: !Sub "${AWSMusingsS3URL}/common/dhclient.conf"
                context:
                  FQDN: !Sub "${DNSZone}-identity.${DNSZone}.${FullyQualifiedInternalParentDNSZone}"

              /home/ec2-user/.bashrc:
                source: !Sub "${AWSMusingsS3URL}/common/bashrc.sh"
                mode: 000644
                owner: ec2-user
                group: ec2-user
              /root/.bashrc:
                source: !Sub "${AWSMusingsS3URL}/common/bashrc.sh"
                mode: 000644
                owner: root
                group: root
      Properties:
        DisableApiTermination: false
        ImageId: ami-b5a7ea85
        InstanceType: t2.micro
        KeyName: !Ref KeyName
        Monitoring: false
        Tags:
        - Key: Name
          Value: !Sub "${DNSZone}-identity"
        NetworkInterfaces:
        - AssociatePublicIpAddress: false
          DeleteOnTermination: true
          Description: Primary network interface
          DeviceIndex: 0
          SubnetId: !Ref SubnetId
          GroupSet: [ !Ref SecurityGroupId ]
        UserData:
          Fn::Base64:
            !Sub |
              #!/bin/bash

              set -e -x

              export HOSTNAME=identity
              export STACK_NAME="${AWS::StackName}"
              export RESOURCE=NATInstance
              export REGION="${AWS::Region}"
              export AWS_MUSINGS_S3_URL="${AWSMusingsS3URL}"

              curl --output /tmp/bootstrap.sh --silent $AWS_MUSINGS_S3_URL/common/bootstrap.sh
              source /tmp/bootstrap.sh
              aws-bootstrap

              # All done so signal success
              aws-signal-success
              reboot
      CreationPolicy:
        ResourceSignal:
          Timeout: PT10M

  Outputs:
    PrivateIP:
      Value: !GetAtt IdentityInstance.PrivateIp
