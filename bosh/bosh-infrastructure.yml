---
  AWSTemplateFormatVersion: 2010-09-09

  Description: bosh networking and director

  Parameters:
    ManagementThreeOctetCIDRBlock:
      Type: String
      Default: 10.0.53
      Description: The first 24 bits of the first CIDR block for the management subnet.
      AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
      ConstraintDescription: must be the first three digits of a valid IP CIDR of the form x.x.x
    NetworkACLId:
      Type: String
      Description: The id of the network access control list used to protect instances in this project.
    PrivateRouteTableId:
      Type: String
      Description: The id of the private route table associated with the project's subnets.
    VPCId:
      Type: AWS::EC2::VPC::Id
      Description: The id of the VPC in which the resources will be created.
    ThreeOctetCIDRBlockA:
      Type: String
      Default: 10.0.54
      Description: The first 24 bits of the first CIDR block for the A AZ subnet.
      AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
      ConstraintDescription: must be the first three digits of a valid IP CIDR of the form x.x.x
    ThreeOctetCIDRBlockB:
      Type: String
      Default: 10.0.55
      Description: The first 24 bits of the second CIDR block for the B AZ subnet.
      AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
      ConstraintDescription: must be the first three digits of a valid IP CIDR of the form x.x.x
    ThreeOctetCIDRBlockC:
      Type: String
      Default: 10.0.56
      Description: The first 24 bits of the third CIDR block for the C AZ subnet.
      AllowedPattern: "(\\d{1,3})\\.(\\d{1,3})\\.(\\d{1,3})"
      ConstraintDescription: must be the first three digits of a valid IP CIDR of the form x.x.x

  Resources:
    ManagementSubnet:
      Type: AWS::EC2::Subnet
      Properties:
        CidrBlock: !Sub "${ManagementThreeOctetCIDRBlock}.0/24"
        AvailabilityZone: !Select [ "0", !GetAZs "" ]
        VpcId: !Ref VPCId
        Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-management-subnet"
    SubnetA:
      Type: AWS::EC2::Subnet
      Properties:
        CidrBlock: !Sub "${ThreeOctetCIDRBlockA}.0/24"
        AvailabilityZone: !Select [ "0", !GetAZs "" ]
        VpcId: !Ref VPCId
        Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-a-subnet"
    SubnetB:
      Type: AWS::EC2::Subnet
      Properties:
        CidrBlock: !Sub "${ThreeOctetCIDRBlockB}.0/24"
        AvailabilityZone: !Select [ "1", !GetAZs "" ]
        VpcId: !Ref VPCId
        Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-b-subnet"
    SubnetC:
      Type: AWS::EC2::Subnet
      Properties:
        CidrBlock: !Sub "${ThreeOctetCIDRBlockC}.0/24"
        AvailabilityZone: !Select [ "2", !GetAZs "" ]
        VpcId: !Ref VPCId
        Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-c-subnet"

    ManagementSubnetRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref PrivateRouteTableId
        SubnetId: !Ref ManagementSubnet
    SubnetARouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref PrivateRouteTableId
        SubnetId: !Ref SubnetA
    SubnetBRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref PrivateRouteTableId
        SubnetId: !Ref SubnetB
    SubnetCRouteTableAssociation:
      Type: AWS::EC2::SubnetRouteTableAssociation
      Properties:
        RouteTableId: !Ref PrivateRouteTableId
        SubnetId: !Ref SubnetC

    ManagementSubnetNetworkACLAssociation:
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        NetworkAclId: !Ref NetworkACLId
        SubnetId: !Ref ManagementSubnet
    SubnetANetworkACLAssociation:
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        NetworkAclId: !Ref NetworkACLId
        SubnetId: !Ref SubnetA
    SubnetBNetworkACLAssociation:
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        NetworkAclId: !Ref NetworkACLId
        SubnetId: !Ref SubnetB
    SubnetCNetworkACLAssociation:
      Type: AWS::EC2::SubnetNetworkAclAssociation
      Properties:
        NetworkAclId: !Ref NetworkACLId
        SubnetId: !Ref SubnetC

    BOSHDirectorSecurityGroup:
      Type: AWS::EC2::SecurityGroup
      Properties:
        GroupDescription: BOSH director security group
        VpcId: !Ref VPCId
        Tags:
        - Key: Name
          Value: !Sub "${AWS::StackName}-bosh-director-sg"
        SecurityGroupIngress:
        - IpProtocol: -1
          CidrIp: 10.0.0.0/8
        SecurityGroupEgress:
        - IpProtocol: -1
          CidrIp: 0.0.0.0/0

  Outputs:
    ManagementSubnetId:
      Description: The id of the bosh management subnet.
      Value: !Ref ManagementSubnet
    BOSHDirectorSecurityGroupId:
      Description: The id of the bosh director security group.
      Value: !Ref BOSHDirectorSecurityGroup
